Sub stockTicker()'declare variablesDim ticker As StringDim open_price, close_price, total_volume As DoubleDim summary_table_row As IntegerDim ws As Worksheet'turn off screen updating to make the process fasterApplication.ScreenUpdating = False'loop through each of the worksheetsFor Each ws In Worksheets    Worksheets(ws.Name).Activate    'sort the spreadsheet by stock ticker and then by year    With ActiveSheet.Sort         .SortFields.Add Key:=Range("A2"), Order:=xlAscending         .SortFields.Add Key:=Range("B2"), Order:=xlAscending         .SetRange Range("A2", Range("G2").End(xlDown))         .Apply    End With        'assign initial values to variables    'columns I, J, K and L are the header rows for the initial project    Range("I1").Value = "Ticker"    Range("J1").Value = "Yearly Change"    Range("K1").Value = "Percent Change"    Range("L1").Value = "Total Stock Volume"    open_price = Cells(2, 3).Value    total_volume = 0    summary_table_row = 2    lastrow = Cells(Rows.Count, 1).End(xlUp).Row        'loop through the stock data, by ticker, by year    'calculate the difference between open/close price by stock ticker    'calculate the change in price and % change        For i = 2 To lastrow            If Cells(i + 1, 1).Value <> Cells(i, 1).Value Then 'this evaluates true when the tickers change in column A            ticker = Cells(i, 1).Value            total_volume = total_volume + Cells(i, 7).Value            close_price = Cells(i, 6).Value            Range("I" & summary_table_row).Value = ticker            Range("L" & summary_table_row).Value = total_volume            next_ticker_first_row = i + 1 'save the first row of the next ticker for the open price            yearly_change = close_price - open_price            Range("J" & summary_table_row).Value = Format(yearly_change, "Fixed")            If open_price = 0 Then 'adjust for $0.00 open price to avoid division by zero error                percent_change = 0            Else                percent_change = close_price / open_price - 1            End If            Range("K" & summary_table_row).Value = Format(percent_change, "Percent")                If yearly_change < 0 Then 'if the annual close price is less than the open price, fill the cell red                    Range("J" & summary_table_row).Interior.ColorIndex = 3                Else 'if the annual close price is higher than the open price, fill the cell green                    Range("J" & summary_table_row).Interior.ColorIndex = 4                End If            open_price = Cells(next_ticker_first_row, 3).Value 'set the open price at each change in ticker            total_volume = 0 'reset the the total volume at each change in ticker            summary_table_row = summary_table_row + 1        Else            total_volume = total_volume + Cells(i, 7).Value 'keep adding to the total until the ticker changes        End If        Next i        '**______BONUS START_____**        'columns O, P and Q are the labels/headers for the bonus project    Range("O2").Value = "Greatest % Increase"    Range("O3").Value = "Greastest % Decrease"    Range("O4").Value = "Greastest Total Volume"    Range("P1").Value = "Ticker"    Range("Q1").Value = "Value"    'set the initial values to 0 for the comparison of greatest change    Range("Q2:Q4").Value = 0    greatest_percent_increase = 0    greatest_percent_decrease = 0    greatest_total_volume = 0        For j = 2 To lastrow        'compare the current row value of percent change to the last saved value for greatest increase        If Cells(j, 11).Value > greatest_percent_increase Then            greatest_percent_increase_ticker = Cells(j, 9).Value            greatest_percent_increase = Cells(j, 11).Value            Range("P2").Value = greatest_percent_increase_ticker            Range("Q2").Value = Format(greatest_percent_increase, "Percent")        End If        'compare the current row value of percent change to the last saved value for greatest decrease        If Cells(j, 11).Value < greatest_percent_decrease Then            greatest_percent_decrease_ticker = Cells(j, 9).Value            greatest_percent_decrease = Cells(j, 11).Value            Range("P3").Value = greatest_percent_decrease_ticker            Range("Q3").Value = Format(greatest_percent_decrease, "Percent")        End If        'compare the current row value of total volume to the last saved value        If Cells(j, 12).Value > greatest_total_volume Then            greatest_total_volume_ticker = Cells(j, 9).Value            greatest_total_volume = Cells(j, 12).Value            Range("P4").Value = greatest_total_volume_ticker            Range("Q4").Value = greatest_total_volume        End If    Next j        '**______BONUS END_____**        'best fit each of the columns so it's easier for the user to read    Range("A:Q").EntireColumn.AutoFitNext ws'turn screen updating back onApplication.ScreenUpdating = True'display a message box so the user knows the calculations are finishedMsgBox ("Complete")End Sub